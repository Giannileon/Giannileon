 /** @format */
function saveArrayToFile(array, filename =
'array.json') {
        const json = JSON.stringify(array); //
Convert array to JSON string
        const blob = new Blob([json], { type:
'application/json' }); // Create a Blob
        const a = document.createElement('a');
        a.href = URL.createObjectURL(blob); //
Create a URL for the Blob
name
}
a.download = filename; // Set the file
a.click(); // Trigger the download
async function nextGeneration() {
        highscore = 0;
        for (let particle of savedParticles) {
                particle.calculateFitness(end);
highscore) {
particle.newfitness;
if (particle.newfitness >
        highscore =
                        //
console.log('particle.model.getWeights() =>',
particle.brain.model.getWeights())
                        //
if(particle.newfitness > 100000000000000000){
                        //     const weights =
particle.brain.model.getWeights();
                        //
saveArrayToFile(weights, 'weights.json');
                        //     await
particle.brain.model.save('downloads://my-
model');
}
// } }
}
if (highscore > highscore2) {
        highscore2 = highscore;
}
this.gen++;
calculateFitness(end);
for (let i = 0; i < TOTAL; i++) {
        population[i] = pickOne();
}
for (let i = 0; i < TOTAL; i++) {
savedParticles[i].dispose();
savedParticles = [];
